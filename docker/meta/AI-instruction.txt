I changed my mind... I still want to have a Dockerfile for creating a robust testing environment for an npm package I am working on. I want to use the Dockerfile to build an image that would be a static test environment for a package that would be created later and installed only in the container... the image itself would contain a TypeScript project that would later be compiled after the package is installed in the container when it would startup for the first time and then I will want to start the compiled javascript and run the code to test the package in that standardized environment... so I want the Dockerfile to have some parameters that could be decided later before creating the image... I then want to be able to have some other parameter to configure the image I then want to spawn (or I do not know the technical term) a container that would also be parametrized for an other set of parameters and lastly I want to be able to instruct the running container to do certain tests... So I want to set in stone some features of the testing environment some settings when creating my Dockerfile, then I want to set in stone other and different parameters or settings when creating the image, then I want to give a few more instruction when I will first run the container which would automatically compile the project with the newly created package that wat instructed in an earlier step and then when the contained is running I want to start some testing by instructing the compelled javascript project inside of it to perform certain operation already predetermined in the code contained in the image tha have been compiled to javascript in a previous step

Since you are an AI and can not recall what we did in previous sessions try to do the same docker file but using only the information I just mentioned in my previous message I just sent you now then I will tell you if it is similar enough to the Dockerfile that the AI model created in a previous session...

I  forgot to mention some information: I need to set some parameters from outside the Dockerfile, so I need to provide the base image version number of the nodeJS as a command line argument I need to have the testing typescript project set in stone (in the image) so I can have a standardized test environment, but I will provide a npm tgz package only at the runtime phase in the docker run command or as a volume or file etc
